(in-package :vaspkit)

(defmethod %cell ((vasprun node))
  (find-child-by-attrs '("name" "primitive_cell") vasprun))

(defmethod %index ((vasprun node))
  (find-child-by-attrs '("name" "primitive_index") vasprun))

(defmethod cell ((vasprun node))
  (let* ((cell (%cell vasprun))
	 (crystal (find-child-by-name "crystal" cell))
	 (basis (find-child-by-attrs '("name" "basis") crystal))
	 (volume (find-child-by-attrs '("name" "volume") crystal))
	 (rec-basis (find-child-by-attrs '("name" "rec_basis") crystal))
	 (positions (find-child-by-attrs '("name" "positions") cell))
	 (index (%index vasprun))
	 (table (make-hash-table :test #'equal)))
    (destructuring-bind (key value) (parse-varray-node basis)
      (setf (gethash key table) value))
    (destructuring-bind (key value) (parse-item-leaf volume)
      (setf (gethash key table) value))
    (destructuring-bind (key value) (parse-varray-node rec-basis)
      (setf (gethash key table) value))
    (destructuring-bind (key value) (parse-varray-node positions)
      (setf (gethash key table) value))
    (destructuring-bind (key value) (parse-varray-node index)
      (setf (gethash key table) value))
    table))
